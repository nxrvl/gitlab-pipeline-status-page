package templates

import (
    "gitlab-status/models"
    "strconv"
)

templ Status(username string, noProjects bool, statuses []models.RepositoryStatus) {
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8"/>
        <title>GitLab Pipeline Status</title>
        <!-- Bootstrap 5 CSS -->
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet"/>
        <!-- Bootstrap Icons -->
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.0/font/bootstrap-icons.css"/>
        <!-- Popper.js for tooltips -->
        <script src="https://unpkg.com/@popperjs/core@2"></script>
        <!-- Bootstrap JS Bundle -->
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
        <style>
            .pipeline-hover {
                cursor: pointer;
                position: relative;
            }
            .hover-content {
                display: none;
                position: absolute;
                background-color: #f9f9f9;
                min-width: 300px;
                box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
                padding: 12px;
                z-index: 1;
                border-radius: 4px;
                right: 0;
            }
            .pipeline-hover:hover .hover-content {
                display: block;
            }
            .status-badge {
                padding: 0.35em 0.65em;
                border-radius: 0.25rem;
                text-decoration: none;
                display: inline-block;
            }
            .status-success {
                background-color: #198754;
                color: white;
            }
            .status-failed {
                background-color: #dc3545;
                color: white;
            }
            .status-running {
                background-color: #0d6efd;
                color: white;
            }
            .status-pending {
                background-color: #ffc107;
                color: black;
            }
            .status-canceled {
                background-color: #6c757d;
                color: white;
            }
            .status-error {
                background-color: #dc3545;
                color: white;
            }
        </style>
    </head>
    <body>
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
        <div class="container">
            <a class="navbar-brand" href="/">GitLab Pipeline Status</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav">
                    <li class="nav-item">
                        <a class="nav-link active" aria-current="page" href="/">Status</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/settings">Settings</a>
                    </li>
                </ul>
                <ul class="navbar-nav ms-auto">
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                            <i class="bi bi-person-circle"></i> { username }
                        </a>
                        <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="navbarDropdown">
                            <li><a class="dropdown-item" href="/logout">Logout</a></li>
                        </ul>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    <div class="container my-4">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h1>Pipeline Statuses</h1>
            <div>
                <a href="/settings" class="btn btn-outline-primary btn-sm">
                    <i class="bi bi-gear"></i> Settings
                </a>
            </div>
        </div>

        <p>Displaying pipeline status for selected GitLab projects.</p>

        if noProjects {
            <div class="alert alert-warning">
                <h4 class="alert-heading"><i class="bi bi-exclamation-triangle"></i> No projects selected</h4>
                <p>You haven't selected any projects to monitor yet. Please go to the Settings page to select projects.</p>
                <hr/>
                <a href="/settings" class="btn btn-primary">
                    <i class="bi bi-gear"></i> Go to Settings
                </a>
            </div>
        } else {
            <div id="status-container">
                @StatusTable(statuses)
            </div>

            <div class="alert alert-info mt-4">
                <small>
                    <i class="bi bi-info-circle"></i> Click on project names to view project details in GitLab, or click on pipeline status to view pipeline details.
                    Hover over status badges to see recent pipeline history.
                </small>
            </div>
        }
    </div>

    <script>
        // Enable Bootstrap tooltips
        document.addEventListener('DOMContentLoaded', function() {
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });
        });
    </script>
    </body>
    </html>
}

templ StatusTable(statuses []models.RepositoryStatus) {
    <table class="table table-striped table-hover">
        <thead>
        <tr>
            <th>Project</th>
            <th>Path</th>
            <th>Ref/Tag</th>
            <th>Last Pipeline</th>
            <th>Last Pipeline Date</th>
            <th>Last Success</th>
            <th>Last Success Date</th>
        </tr>
        </thead>
        <tbody>
        for _, status := range statuses {
        <tr>
            <td>
                <a href={ templ.SafeURL(status.ProjectURL) } target="_blank" class="text-decoration-none" data-bs-toggle="tooltip" title="View project in GitLab">
                    { status.RepositoryName } <i class="bi bi-box-arrow-up-right text-muted small"></i>
                </a>
            </td>
            <td><small class="text-muted">{ status.RepositoryPath }</small></td>
            <td>
                if status.Version != "" {
                <span class="badge bg-secondary">{ status.Version }</span>
                } else {
                <span class="text-muted">N/A</span>
                }
            </td>
            <td>
                if status.Status != "Error" {
                <div class="pipeline-hover">
                    <a href={ templ.SafeURL(status.WebURL) } target="_blank" class={ templ.SafeClass("status-badge status-" + status.Status) } data-bs-toggle="tooltip" title={ "View pipeline #" + strconv.Itoa(status.PipelineID) + " details" }>
                        { status.Status }
                    </a>
                    <div class="hover-content">
                        <div class="mb-2">
                            <strong>Current Pipeline #{ strconv.Itoa(status.PipelineID) }:</strong>
                            <table class="table table-sm small mb-0">
                                <tr>
                                    <th>Ref:</th>
                                    <td><code>{ status.Version }</code></td>
                                </tr>
                                <tr>
                                    <th>Date:</th>
                                    <td>{ status.Date.Format("2006-01-02 15:04:05") }</td>
                                </tr>
                                <tr>
                                    <th>Status:</th>
                                    <td>
                                        <span class={ templ.SafeClass("status-badge status-" + status.Status) }>{ status.Status }</span>
                                    </td>
                                </tr>
                            </table>
                        </div>

                        <strong>Recent Pipelines:</strong>
                        <table class="table table-sm small mb-0">
                            <thead>
                                <tr>
                                    <th>ID</th>
                                    <th>Ref</th>
                                    <th>Status</th>
                                    <th>Date</th>
                                </tr>
                            </thead>
                            <tbody>
                                for _, pipeline := range status.RecentPipelines {
                                <tr>
                                    <td>{ strconv.Itoa(pipeline.ID) }</td>
                                    <td><code>{ pipeline.Ref }</code></td>
                                    <td>
                                        <a href={ templ.SafeURL(pipeline.WebURL) } target="_blank" class={ templ.SafeClass("status-badge status-" + pipeline.Status) }>
                                            { pipeline.Status }
                                        </a>
                                    </td>
                                    <td>{ pipeline.CreatedAt.Format("01/02 15:04") }</td>
                                </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
                } else {
                <span class="status-badge status-error">Error</span>
                }
            </td>
            <td>
                if status.Date.Year() != 1 {
                { status.Date.Format("2006-01-02 15:04:05") }
                } else {
                <span class="text-muted">N/A</span>
                }
            </td>
            <td>
                if status.LastSuccessPipeline != nil {
                <div class="pipeline-hover">
                    <a href={ templ.SafeURL(status.LastSuccessPipeline.WebURL) } target="_blank" class="status-badge status-success" data-bs-toggle="tooltip" title={ "View successful pipeline #" + strconv.Itoa(status.LastSuccessPipeline.ID) + " details" }>
                        Success
                    </a>
                    <div class="hover-content">
                        <strong>Successful Pipeline #{ strconv.Itoa(status.LastSuccessPipeline.ID) }:</strong>
                        <table class="table table-sm small mb-0">
                            <tr>
                                <th>Ref:</th>
                                <td><code>{ status.LastSuccessPipeline.Ref }</code></td>
                            </tr>
                            <tr>
                                <th>Date:</th>
                                <td>{ status.LastSuccessPipeline.CreatedAt.Format("2006-01-02 15:04:05") }</td>
                            </tr>
                        </table>
                    </div>
                </div>
                } else {
                <span class="text-muted">N/A</span>
                }
            </td>
            <td>
                if status.LastSuccessPipeline != nil {
                { status.LastSuccessPipeline.CreatedAt.Format("2006-01-02 15:04:05") }
                } else {
                <span class="text-muted">N/A</span>
                }
            </td>
        </tr>
        }
        </tbody>
    </table>
}